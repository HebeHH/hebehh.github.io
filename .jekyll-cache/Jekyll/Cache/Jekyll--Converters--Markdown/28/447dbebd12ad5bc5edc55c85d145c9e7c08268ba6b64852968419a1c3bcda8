I"à<p>Today I spent about two minutes writing a little python batch processor, and then another ten wondering why it suddenly stopped working. It was a good reminder that platform-independence is hard to come by, no matter how high-level and abstract the language.</p>

<hr />

<p>I have a folder of Lift programs to parse and compile. The compiler is working (at long last), so all that‚Äôs left is to write a nice batch processor:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">os</span> <span class="kn">import</span> <span class="n">listdir</span><span class="p">,</span> <span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">,</span> <span class="n">path</span><span class="o">.</span><span class="n">join</span>

<span class="n">folder_name</span> <span class="o">=</span> <span class="s">'highlevel/'</span>
<span class="n">files</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">listdir</span><span class="p">(</span><span class="n">folder_name</span><span class="p">)</span> <span class="k">if</span> <span class="n">isfile</span><span class="p">(</span><span class="n">join</span><span class="p">(</span><span class="n">folder_name</span><span class="p">,</span> <span class="n">f</span><span class="p">))]</span>

<span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
  <span class="n">my_compiler</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
</code></pre></div></div>

<p>I run this. It works. I export the IPython notebook to plain <code class="highlighter-rouge">.py</code> and run it in the command line. It works.</p>

<p>Good grief, but it is taking forever, and I want to go to bed.  I could leave it overnight, but my laptop suffers from narcolepsy. This is what my Digital Ocean droplet is for.</p>

<p>I quickly <code class="highlighter-rouge">ssh</code> in and <code class="highlighter-rouge">git clone</code> the repository, before running it again.</p>

<p>It doesn‚Äôt work.</p>

<p>What?</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> no such file or directory: <span class="s1">'highlevel/'</span> 
</code></pre></div></div>

<p>But. But. But.</p>

<p>That doesn‚Äôt make sense.</p>

<p>This is an <em>exact clone</em> of my local repository.</p>

<hr />

<p>Let me double-check that, just in case I forgot a <code class="highlighter-rouge">commit</code> or <code class="highlighter-rouge">push</code> somewhere in there.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span> <span class="nt">-d</span> <span class="k">*</span>/
<span class="o">&gt;&gt;&gt;</span> curr/			highLevel/
</code></pre></div></div>

<p>Oh. It‚Äôs a straightforward bug: I didn‚Äôt spell <em>highLevel</em> correctly. That makes sense, I‚Äôve made similar mistakes before. Of course it throws an error. But I‚Äôm still  confused.</p>

<p>Why did it work originally?</p>

<hr />

<p>See, my personal computer is a Macbook. My droplet, however, runs Linux. I didn‚Äôt think this would be an issue, though - all my code is in Python3. That‚Äôs a high enough language to be completely portable, right?</p>

<p>Wrong. Especially when you start using libraries. Especially when you start using I/O libraries. I/O is typically the greatest threat to cross-platform-ness, and this is no exception.</p>

<p>According to <a href="https://docs.python.org/3/library/os.html">the docs</a>, the <code class="highlighter-rouge">os</code> module ‚Äúprovides a portable way of using operating system dependent functionality.‚Äù This second part of this sentence is perhaps more relevant than the first. While the module provides standardized hooks into OS services, the behaviour of the OS services can vary. I didn‚Äôt expect this to happen between MacOS and Linux since they‚Äôre both POSIX compliant, so <code class="highlighter-rouge">os</code> uses the same system calls. Unfortunately, there‚Äôs room for heterogeneity between POSIX systems.</p>

<hr />

<p><strong>In short:</strong> Linux shell is case-sensitive by default. MacOS is not.</p>

<p>This affects the command line, but also any other program that resolves into system calls.</p>

<hr />

<p>Before anyone mentions it - yes, I did write a compiler in Python3, and yes, it was indeed an utterly terrible idea. More on that later.</p>
:ET